@use "util" as u;
@use "globals" as g;

:root {
  // color-scheme: light dark;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

*,
*::before,
*::after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
  font-family: inherit;
}

// Sets the font-size to match that of device or browser settings
// :root font-size must not be set for this to work
// Font-size defaults to 16px
html {
  box-sizing: border-box;
  font-size: 100%;

  @include u.breakpoint-down(large) {
    font-size: 80%;
  }

  height: 100%;
}

body {
  font-family: u.$font;
  line-height: 120%;
  font-weight: 400;

  height: 100%;
}

input {
  font-size: 110%;
}

a,
a:visited,
a:active {
  text-decoration: none;
  color: inherit;
}

ul,
ol {
  list-style: none;
  padding: 0;
  margin: 0;
}

button {
  outline: none;
  border: none;

  cursor: pointer;
  transition: border-color 0.25s;
  transition: background 0.1s linear;

  &:focus-visible {
    outline: 4px auto -webkit-focus-ring-color;
  }
}

.button {
  transition: transform .2s ease, box-shadow .2s ease;

  background-color: var(--primary-color);
  color: var(--text-color);
  padding: u.rem(8) u.rem(24);
  @include g.text;
  border-radius: u.rem(8);

  &_outlined {
    border: solid u.rem(2) var(--primary-color);
    background-color: var(--background-color);
  }

  &:hover {
    transform: translateY(u.rem(-4));
    box-shadow: u.rem(0) u.rem(4) u.rem(16) u.rem(0) var(--primary-color);
  }
}

.link {
  position: relative;
  padding-bottom: u.rem(2);

  &::after {
    content: "";
    position: absolute;
    height: u.rem(1);
    background-color: var(--text-color);
    width: 95%;

    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    transition: height .1s ease;
  }

  &:hover::after {
    height: u.rem(4);
  }
}

.container {
  margin: 0 auto;
  max-width: u.rem(1200);
}