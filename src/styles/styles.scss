@use "util" as u;
@use "globals" as g;
@use "layouts" as l;

// @media (prefers-color-scheme: dark) {
//   @each $name, $val in g.$colors-dark {
//       :root {
//           --#{$name}: #{$val}; 
//           --color-#{$name}: #{u.cl($name, false)}; 
//       }
//   }
// }

// @media (prefers-color-scheme: light) {
  @each $name, $val in g.$colors-light {
      :root {
          --#{$name}: #{$val}; 
          --color-#{$name}: #{u.cl($name, true)}; 
      }
  }
// }

:root {
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  min-width: 0;
  box-sizing: inherit;
  font-family: inherit;
  font-size: inherit;
}

// Sets the font-size to match that of device or browser settings
// :root font-size must not be set for this to work
// Font-size defaults to 16px
html {
  box-sizing: border-box;
  font-size: 100%;
}

body {
  font-family: u.$font;
  font-size: 100%;
  font-weight: 400;
  color: var(--color-text);
}

a,
a:visited,
a:active {
  text-decoration: none;
  color: inherit;
}

ul,
ol {
  list-style: none;
  padding: 0;
  margin: 0;
}

button {
  outline: none;
  border: none;
  background: none;

  cursor: pointer;
  transition: border-color 0.25s;
  transition: background 0.1s linear;

  &:focus-visible {
    outline: 4px auto -webkit-focus-ring-color;
  }
}

.link {
  transition: opacity .2s ease;
  white-space: nowrap;

  &:hover {
    opacity: 0.85;
  }

  &:active {
    opacity: 0.7;
  }

  &_underlined {
    position: relative;
    padding-bottom: u.rem(2);

    &::after {
      content: "";
      position: absolute;
      height: u.rem(1);
      background-color: var(--color-accent);
      width: 95%;

      top: 100%;
      left: 50%;
      transform: translateX(-50%);
      transition: height .1s ease;
    }

    &:hover::after {
      height: u.rem(4);
    }
  }
}

.icon {
  min-width: u.rem(24);
  height: auto;
}